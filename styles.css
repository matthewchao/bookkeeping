* {
  box-sizing: border-box;
}

.wrapper {
  display: grid;
  grid-gap: 1em;
  padding: 1em;
  grid-template-columns: 1fr 1fr 1fr;
}



.accountSection {
  grid-column: 1 / 4;
  display:grid;
  grid-template-rows: auto auto auto;
}

.transactionSection {
  grid-column: 1/ 4;
}

.rightSection {
  grid-column: 1 / 4;
}


form.addAccount {
  display: grid;
  grid-template-columns:1fr 20vw auto;
  grid-template-rows:24px 1fr;
  grid-column-gap: .5em;
  padding: 0.5em;
  margin: 0 0 0 0;
}

form.addAccount > * {
  width:100%;
}

form.addAccount input {
  grid-row: 2 /3;
}

form.addAccount label[for="newAccount"] {
  grid-column: 1/4;
  grid-row: 1;
}

form.addAccount label[for="newBalance"] {
  grid-column: 2/4;
  grid-row: 1;
}

form.addAccount label[for="addAccountButton"] {
  grid-column: 3/4;
  grid-row: 1;
}




div.account {
  display: grid;
  grid-template-columns: 3fr 1fr;
  grid-column-gap: .5em;
  padding: .5em;
}

div.account input {
  margin: 0 0 0 0;
}

div.account > div.name {
  display: grid;
  grid-template-columns: 1fr auto;
}

div.name div.deleteAccount {
  grid-column: 2/3;
}

div.account > div.balance {

}

div.account > div.name {
  display: flex;
}

/* form.addAccount label[for="addAccountButton"] {
  grid-row: 2/4;
} */


@media all and (min-width: 800px) {
  .wrapper {
    display: grid;
    grid-gap: 1.5em;
    padding: 1.5em;
    grid-template-columns: 1fr 1fr;
  }
}

@media all and (min-width: 1200px) {
  .wrapper {
    display: grid;
    grid-gap: 2em;
    padding: 2em;
    grid-template-columns: 1fr 1fr 1fr;
  }
}

/* form.addAccount input {
  min-width:0;
} */


/* form.addAccount label[for='newAccount'] {
  grid-area: a;
}

form.addAccount label[for='newBalance'] {
  grid-area: b;
}

form.addAccount input#newAccount {
  grid-area: d;
}

form.addAccount input#newBalance {
  grid-area: e;
}

form.addAccount input[type='submit'] {
  grid-area: f;
} */






/* <form id="addAccountForm" class="addAccount">
  <div id="newAccountDiv">
    <label for="newAccount">New account name:</label>
    <input type="text" name="newAccount" id="newAccount" required>
  </div>
  <div id="newBalanceDiv">
    <label for="newBalance">Opening balance:</label>
    <input type="number" id="newBalance" name="newBalance" placeholder="0.00" step=".01" required>
  </div>
  <div id="accountButtonDiv">
    <label for="addAccountButton"></label>
    <input name="addAccountButton" type="submit" value="add">
  </div>

</form> */












/* @media (min-width: 34em) and (max-width: 49.9375em) {

  .wrapper {
    display: grid;
    grid-gap: 1.5em;
    padding: 1.5em;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
  }


} */











.transactionBody {
  display: flex;
  flex-direction: column;
}










/*See https://stackoverflow.com/questions/32551291/in-css-flexbox-why-are-there-no-justify-items-and-justify-self-properties/33856609#33856609  */


/* .addAccount {
  display: flex;
}

#accountButtonDiv {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
} */









.transaction {
  display: flex;
}

div.transaction > * {
  flex-grow: 1;
}

div.transactionNames {
  display:flex;
}

div.transactionNames > div.targetName {
  margin-left: auto;
}

div.transactionAmount {
  display: flex;
  justify-content: flex-end;
}

div.transactionAmount > .deleteTransaction {
/*   margin-left: auto; */
}




.addTransaction {
  display: flex;
}

.addTransaction > #sourceAccountInput {
}

.addTransaction > #targetAccountInput {
}

#transactionAmountDiv {
}


#transactionAmountDiv {
  display: flex;
  flex-direction: column;
}



#transactionButtonDiv {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}

#transactionAmountDiv > input {
  width: 100%
}
